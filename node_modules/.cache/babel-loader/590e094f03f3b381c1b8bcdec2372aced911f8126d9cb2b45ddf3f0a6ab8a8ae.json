{"ast":null,"code":"var _jsxFileName = \"/Users/jimena/Downloads/Telegram Desktop/forum/src/Forum/PostComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostComponent = ({\n  post\n}) => {\n  _s();\n  const [likes, setLikes] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [imageSrc, setImageSrc] = useState(null); // State to store image source\n\n  useEffect(() => {\n    // Fetch the image using the filename and filepath from the post\n    if (post.filename && post.filepath) {\n      axios.get(`${process.env.REACT_APP_API_URL}/${post.filepath}/${post.filename}`, {\n        responseType: 'blob' // Ensure response is treated as binary data\n      }).then(response => {\n        const imageUrl = URL.createObjectURL(response.data);\n        setImageSrc(imageUrl);\n      }).catch(error => {\n        console.error('Error fetching image:', error);\n      });\n    }\n  }, [post.filename, post.filepath]);\n  const handleLike = () => {\n    setLikes(likes + 1);\n  };\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    if (commentText.trim()) {\n      setComments([...comments, commentText]);\n      setCommentText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../uploads/3044ee5c35efd5c2b28a21986e6270ec\",\n        alt: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"name\",\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"location\",\n            children: post.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag\",\n        children: \"CULTURE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-stats\",\n        children: [\"Seen \", post.views, \" times | \", new Date(post.createdAt).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLike,\n          children: \"\\u2764\\uFE0F Like it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [likes, \" reaction\", likes !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comments\",\n      children: [comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value),\n          className: \"comment-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"comment-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PostComponent, \"zMR0ipcCJVK+3Kpa+87NVFASSNw=\");\n_c = PostComponent;\nexport default PostComponent;\nvar _c;\n$RefreshReg$(_c, \"PostComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PostComponent","post","_s","likes","setLikes","comments","setComments","commentText","setCommentText","imageSrc","setImageSrc","filename","filepath","get","process","env","REACT_APP_API_URL","responseType","then","response","imageUrl","URL","createObjectURL","data","catch","error","console","handleLike","handleCommentSubmit","e","preventDefault","trim","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","author","location","content","views","Date","createdAt","toLocaleDateString","onClick","map","comment","index","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/jimena/Downloads/Telegram Desktop/forum/src/Forum/PostComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst PostComponent = ({ post }) => {\n  const [likes, setLikes] = useState(0);\n  const [comments, setComments] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [imageSrc, setImageSrc] = useState(null); // State to store image source\n\n  useEffect(() => {\n    // Fetch the image using the filename and filepath from the post\n    if (post.filename && post.filepath) {\n      axios\n        .get(`${process.env.REACT_APP_API_URL}/${post.filepath}/${post.filename}`, {\n          responseType: 'blob', // Ensure response is treated as binary data\n        })\n        .then((response) => {\n          const imageUrl = URL.createObjectURL(response.data);\n          setImageSrc(imageUrl);\n        })\n        .catch((error) => {\n          console.error('Error fetching image:', error);\n        });\n    }\n  }, [post.filename, post.filepath]);\n\n  const handleLike = () => {\n    setLikes(likes + 1);\n  };\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    if (commentText.trim()) {\n      setComments([...comments, commentText]);\n      setCommentText('');\n    }\n  };\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-header\">\n        {/* Display the image if available */}\n        {imageSrc && <img src=\"../uploads/3044ee5c35efd5c2b28a21986e6270ec\" alt=\"Image\"/>}\n        <div>\n          <h2 className='title'>{post.title}</h2>\n          <div className='profile-info'>\n            <h3 className='name'>{post.author}</h3>\n            <h3 className='location'>{post.location}</h3>\n          </div>\n        </div>\n        <div className=\"tag\">CULTURE</div>\n      </div>\n      <div className=\"post-body\">\n        <p>{post.content}</p>\n      </div>\n      <div className=\"post-footer\">\n        <div className=\"post-stats\">\n          Seen {post.views} times | {new Date(post.createdAt).toLocaleDateString()}\n        </div>\n        <div className=\"post-actions\">\n          <button onClick={handleLike}>❤️ Like it</button>\n          <span>{likes} reaction{likes !== 1 ? 's' : ''}</span>\n        </div>\n      </div>\n      <div className=\"post-comments\">\n        {comments.map((comment, index) => (\n          <p key={index}>{comment}</p>\n        ))}\n        <form onSubmit={handleCommentSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Add a comment\"\n            value={commentText}\n            onChange={(e) => setCommentText(e.target.value)}\n            className=\"comment-input\"\n          />\n          <button type=\"submit\" className=\"comment-button\">\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PostComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}