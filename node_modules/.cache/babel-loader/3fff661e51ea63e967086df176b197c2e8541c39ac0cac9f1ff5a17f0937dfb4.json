{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import'./Navbar.css';import NavIcon2 from'./assets/icon.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Navbar(){const[isLoggedIn,setIsLoggedIn]=useState(false);// Check local storage for the token on component mount\nuseEffect(()=>{const token=localStorage.getItem('token');setIsLoggedIn(!!token);// Update isLoggedIn based on token existence\n},[]);const handleLogout=()=>{// Remove the token from local storage to log the user out\nlocalStorage.removeItem('token');setIsLoggedIn(false);};return/*#__PURE__*/_jsxs(\"nav\",{className:\"navbar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"navbar-icons\",children:/*#__PURE__*/_jsx(\"img\",{src:NavIcon2,alt:\"Icon 2\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"navbar-links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-item\",children:\"Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/Overview\",className:\"nav-item\",children:\"Overview\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dropdown\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-menu\",children:[\" Forums\",/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-content\",children:[/*#__PURE__*/_jsx(Link,{to:\"/Forum\",className:\"dropdown-item\",children:\"Forum\"}),/*#__PURE__*/_jsx(Link,{to:\"/Share\",className:\"dropdown-item\",children:\"Share Your Experience\"})]})]})}),isLoggedIn&&/*#__PURE__*/ // Render the \"Profile\" link only if the user is logged in\n_jsx(Link,{to:\"/Profile\",className:\"nav-item\",children:\"Profile\"}),isLoggedIn?/*#__PURE__*/ // Render different content based on login status\n_jsx(\"button\",{className:\"login-button\",onClick:handleLogout,children:\"Log out\"}):/*#__PURE__*/_jsx(Link,{to:\"/Login\",className:\"login-button\",children:\"Log in\"})]})]});}export default Navbar;","map":{"version":3,"names":["React","useState","useEffect","Link","NavIcon2","jsx","_jsx","jsxs","_jsxs","Navbar","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","handleLogout","removeItem","className","children","src","alt","to","onClick"],"sources":["/Users/jimena/Documents/GitHub/international-student-guide/src/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport NavIcon2 from './assets/icon.jpg';\r\n\r\nfunction Navbar() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  // Check local storage for the token on component mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setIsLoggedIn(!!token); // Update isLoggedIn based on token existence\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    // Remove the token from local storage to log the user out\r\n    localStorage.removeItem('token');\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-icons\">\r\n        <img src={NavIcon2} alt=\"Icon 2\" />\r\n      </div>\r\n      <div className=\"navbar-links\">\r\n        <Link to=\"/\" className=\"nav-item\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/Overview\" className=\"nav-item\">\r\n          Overview\r\n        </Link>\r\n        <div className=\"dropdown\">\r\n          <div className='dropdown-menu'> Forums\r\n            <div className=\"dropdown-content\">\r\n              <Link to=\"/Forum\" className=\"dropdown-item\">\r\n                Forum\r\n              </Link>\r\n              <Link to=\"/Share\" className=\"dropdown-item\">\r\n                Share Your Experience\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isLoggedIn && ( // Render the \"Profile\" link only if the user is logged in\r\n          <Link to=\"/Profile\" className=\"nav-item\">\r\n            Profile\r\n          </Link>\r\n        )}\r\n        {isLoggedIn ? ( // Render different content based on login status\r\n          <button className=\"login-button\" onClick={handleLogout}>\r\n            Log out\r\n          </button>\r\n        ) : (\r\n          <Link to=\"/Login\" className=\"login-button\">\r\n            Log in\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,cAAc,CACrB,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzC,QAAS,CAAAC,MAAMA,CAAA,CAAG,CAChB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAEnD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3CH,aAAa,CAAC,CAAC,CAACC,KAAK,CAAC,CAAE;AAC1B,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,YAAY,CAAGA,CAAA,GAAM,CACzB;AACAF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC,CAChCL,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAED,mBACEH,KAAA,QAAKS,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACrBZ,IAAA,QAAKW,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BZ,IAAA,QAAKa,GAAG,CAAEf,QAAS,CAACgB,GAAG,CAAC,QAAQ,CAAE,CAAC,CAChC,CAAC,cACNZ,KAAA,QAAKS,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BZ,IAAA,CAACH,IAAI,EAACkB,EAAE,CAAC,GAAG,CAACJ,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,MAElC,CAAM,CAAC,cACPZ,IAAA,CAACH,IAAI,EAACkB,EAAE,CAAC,WAAW,CAACJ,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,UAE1C,CAAM,CAAC,cACPZ,IAAA,QAAKW,SAAS,CAAC,UAAU,CAAAC,QAAA,cACvBV,KAAA,QAAKS,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,SAC7B,cAAAV,KAAA,QAAKS,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BZ,IAAA,CAACH,IAAI,EAACkB,EAAE,CAAC,QAAQ,CAACJ,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,OAE5C,CAAM,CAAC,cACPZ,IAAA,CAACH,IAAI,EAACkB,EAAE,CAAC,QAAQ,CAACJ,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,uBAE5C,CAAM,CAAC,EACJ,CAAC,EACH,CAAC,CACH,CAAC,CACLR,UAAU,gBAAM;AACfJ,IAAA,CAACH,IAAI,EAACkB,EAAE,CAAC,UAAU,CAACJ,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,SAEzC,CAAM,CACP,CACAR,UAAU,eAAK;AACdJ,IAAA,WAAQW,SAAS,CAAC,cAAc,CAACK,OAAO,CAAEP,YAAa,CAAAG,QAAA,CAAC,SAExD,CAAQ,CAAC,cAETZ,IAAA,CAACH,IAAI,EAACkB,EAAE,CAAC,QAAQ,CAACJ,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,QAE3C,CAAM,CACP,EACE,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}