{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import'./Login.css';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[emailError,setEmailError]=useState('');const[passwordError,setPasswordError]=useState('');const navigate=useNavigate();const clearErrors=()=>{setEmailError('');setPasswordError('');};const handleSubmit=async e=>{e.preventDefault();clearErrors();try{const response=await axios.post('http://localhost:3001/login',{email:email,password:password});if(response.status===200&&response.data.token){console.log('Login successful:',response.data);localStorage.setItem('token',response.data.token);// Example: After successful login\nnavigate('/');}else{setEmailError('Incorrect username or password');}}catch(error){console.error('Request failed:',error);setPasswordError('Incorrect username or password');}};/*\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/login', { email, password });\r\n      localStorage.setItem('token', response.data.token); // 保存token\r\n      navigate('/Home'); // 登录成功后跳转到首页\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      // 处理登录失败\r\n    }\r\n  };*/ /*\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    // 构建要发送到服务器的登录数据\r\n    const loginData = {\r\n      email: email,\r\n      password: password\r\n    };\r\n  \r\n    try {\r\n      // 发送POST请求到登录接口\r\n      const response = await fetch('/api/login', { // 这里的URL '/api/login' 需要替换成实际的登录API端点\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginData),\r\n      });\r\n  \r\n      // 将响应解析为JSON\r\n      const data = await response.json();\r\n  \r\n      // 检查响应状态\r\n      if (response.ok) {\r\n        // 登录成功，可以将返回的用户数据存储到状态管理中\r\n        // 例如使用React Context, Redux或者简单地保存到localStorage\r\n        console.log('登录成功:', data);\r\n        \r\n        // 可以选择保存token到localStorage或sessionStorage\r\n        localStorage.setItem('token', data.token);\r\n  \r\n        // 跳转到主页\r\n        navigate('/home');\r\n      } else {\r\n        // 登录失败，显示错误信息\r\n        console.error('登录失败:', data.message);\r\n        // 这里可以设置错误状态，并在UI中显示错误信息\r\n      }\r\n    } catch (error) {\r\n      // 网络错误或请求失败\r\n      console.error('请求失败:', error);\r\n      // 这里可以设置错误状态，并在UI中显示错误信息\r\n    }\r\n  };\r\n  \r\n  /*const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // TODO: 实现登录验证逻辑\r\n    // 假设验证成功后，跳转到主页\r\n    navigate('/Home'); // 假设您的主页路由是 '/home'\r\n  };\r\n  */const handleSignUp=()=>{navigate('/register');// 假设您的注册页面路由是 '/register'\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login-sidebar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Finland\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The first step to your international experience and student life.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\",value:email,onChange:e=>setEmail(e.target.value),required:true}),emailError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:emailError}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),passwordError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:passwordError}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-footer\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"remember\"}),\" Remember Me\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"LOGIN\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"signup-link\",children:[\"Don't Have An Account? \",/*#__PURE__*/_jsx(\"span\",{onClick:handleSignUp,children:\"Sign Up!\"})]})]})})]});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","navigate","clearErrors","handleSubmit","e","preventDefault","response","post","status","data","token","console","log","localStorage","setItem","error","handleSignUp","className","children","onSubmit","type","placeholder","value","onChange","target","required","name","onClick"],"sources":["/Users/jimena/Documents/GitHub/international-student-guide/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css'; \r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const navigate = useNavigate();\r\n  \r\n\r\n  const clearErrors = () => {\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    clearErrors();\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/login', {\r\n        email: email,\r\n        password: password\r\n      });\r\n\r\n      if (response.status === 200 && response.data.token) {\r\n        console.log('Login successful:', response.data);\r\n        localStorage.setItem('token', response.data.token);\r\n        // Example: After successful login\r\n        \r\n        navigate('/');\r\n      } else {\r\n        setEmailError('Incorrect username or password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Request failed:', error);\r\n      setPasswordError('Incorrect username or password');\r\n    }\r\n  };\r\n\r\n  /*\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/login', { email, password });\r\n      localStorage.setItem('token', response.data.token); // 保存token\r\n      navigate('/Home'); // 登录成功后跳转到首页\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      // 处理登录失败\r\n    }\r\n  };*/\r\n\r\n  /*\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    // 构建要发送到服务器的登录数据\r\n    const loginData = {\r\n      email: email,\r\n      password: password\r\n    };\r\n  \r\n    try {\r\n      // 发送POST请求到登录接口\r\n      const response = await fetch('/api/login', { // 这里的URL '/api/login' 需要替换成实际的登录API端点\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginData),\r\n      });\r\n  \r\n      // 将响应解析为JSON\r\n      const data = await response.json();\r\n  \r\n      // 检查响应状态\r\n      if (response.ok) {\r\n        // 登录成功，可以将返回的用户数据存储到状态管理中\r\n        // 例如使用React Context, Redux或者简单地保存到localStorage\r\n        console.log('登录成功:', data);\r\n        \r\n        // 可以选择保存token到localStorage或sessionStorage\r\n        localStorage.setItem('token', data.token);\r\n  \r\n        // 跳转到主页\r\n        navigate('/home');\r\n      } else {\r\n        // 登录失败，显示错误信息\r\n        console.error('登录失败:', data.message);\r\n        // 这里可以设置错误状态，并在UI中显示错误信息\r\n      }\r\n    } catch (error) {\r\n      // 网络错误或请求失败\r\n      console.error('请求失败:', error);\r\n      // 这里可以设置错误状态，并在UI中显示错误信息\r\n    }\r\n  };\r\n  \r\n  /*const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // TODO: 实现登录验证逻辑\r\n    // 假设验证成功后，跳转到主页\r\n    navigate('/Home'); // 假设您的主页路由是 '/home'\r\n  };\r\n  */\r\n\r\n  const handleSignUp = () => {\r\n    navigate('/register'); // 假设您的注册页面路由是 '/register'\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrapper\">\r\n      <div className=\"login-sidebar\">\r\n      </div>\r\n      <div className=\"login-container\">\r\n        <div className=\"login-content\">\r\n          <h1>Welcome to Finland</h1>\r\n          <p>The first step to your international experience and student life.</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            {emailError && <div className=\"error-message\">{emailError}</div>}\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            {passwordError && <div className=\"error-message\">{passwordError}</div>}\r\n            <div className=\"form-footer\">\r\n              <label>\r\n                <input type=\"checkbox\" name=\"remember\" /> Remember Me\r\n              </label>\r\n              <button type=\"submit\" className=\"login-button\">LOGIN</button>\r\n            </div>\r\n          </form>\r\n          <div className=\"signup-link\">\r\n            Don't Have An Account? <span onClick={handleSignUp}>Sign Up!</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}